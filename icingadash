#!/usr/bin/perl -w

use strict;
use warnings;
use Switch;
use Data::Dumper;
use NagiosStatus;
use CGI;
my $boxsize="18";

use constant {
        STATUSFILE => "/var/spool/icinga/status.dat",
        TARGET_URL=>"/icinga/cgi-bin/extinfo.cgi",
        REFRESH=>5*60, # 5 minutes
};

# Process querystring params
my $q = CGI->new;
if (defined $q->param('boxsize')  and  $q->param('boxsize') =~ /^\d{1,3}$/){
    $boxsize=$q->param('boxsize');
}
$boxsize.="px";



# load Status Object:
my $status = NagiosStatus->new(STATUSFILE);
$status->parse_statusfile();
$status->evaluate();



sub print_header{
    my ($boxsize)=@_;
    my $refresh=REFRESH;
    print <<"EOF"
Content-Type: text/html; charset=ISO-8859-1

<html>
    <head>
        <meta http-equiv='refresh' content='$refresh'>
        <style type="text/css">
            h1, h2 {
                font-family:sans-serif;
                margin-bottom:5px;
            }
            .box {
                margin:2px 2px 0px 0px;
                width:$boxsize;
                height:$boxsize;
                font-size:$boxsize;
                text-align:center;
                display:block;
                float:left;
                text-decoration:none;
            }
            .legend {
                width:120px;
                height:30px;
                font-size:18px;
            }
            .legendtext {
                width:240px;
                height:40px;
                font-size:18px;
            }
            .ok {background-color:green;}
            .warning {background-color:#eeee00}
            .warning-ack {background-color:#f5f599}
            .critical {background-color:#ee0000}
            .critical-ack {background-color:#ee6666}
            .unknown {background-color:A020F0}
            .unknown-ack {background-color:plum}
        </style>
    </head>
<body>
    <h1><a href="/icinga/">Icinga Dashboard</a></h1>
    <div style="float:right; border:1px solid gray; margin:5px;padding:5px;">
        <h2>legend</h2>
        <div class="box legend ok" >ok</div>
        <div class="box legend warning" >warning</div>
        <div class="box legend critical" >critical</div>
        <div class="box legend unknown" >unknown</div>
        <br>
        <div class="box legend ok-ack" >Acknowledged:</div>
        <div class="box legend warning-ack" >warning</div>
        <div class="box legend critical-ack" >critical</div>
        <div class="box legend unknown-ack" >unknown</div>
        <br>
        <div class="box legendtext">H = Host Acknowledged</div>    
        <div class="box legendtext">&#8730;= Service Acknowledged</div>
    </div>
EOF
    ;
}


sub title_filter{
    my ($title, $object)=@_;
    my $pluginoutput=$object->{'plugin_output'};
    $pluginoutput=~s/</&lt;/g;
    $pluginoutput=~s/>/&gt;/g;
    return $title."\n\n ".$pluginoutput;
}

sub print_host{
    my ($hostname, $host)=@_;
    $hostname=~s/ /+/g;
    my $status="";
    my $content="&nbsp;";
    my $title="$hostname";
    switch ($host->{'current_state'}){
        case(0) { $status = "ok";  }
        case(1) { $status = "critical"; 
        } else { 
               $status = "unknown"; 
                }
    }
    if ($host->{'problem_has_been_acknowledged'} == 1 ){
        $status .= "-ack";
        $content= "&#8730;";
        $title.=" (Acknowledged)";
    }
        $title=title_filter($title, $host);

    print "<a href='".TARGET_URL."?type=1&host=$hostname' class='box $status' title='$title'>$content</a>\n";

}
sub print_service {
    my ( $servicekey, $service, $status)=@_;
    $servicekey=~s/ /+/g;
    my ($hostname,$servicename)=split /_/,$servicekey;
    my $title="$hostname $servicename";
    my $returncode="";
    my $content="&nbsp;";
    switch ($service->{'current_state'}){
        case(0) { $returncode = "ok";  }
        case(1) { $returncode = "warning"; }
        case(2) { $returncode = "critical"; }
        else    { $returncode = "unknown"; }
    }
    if (defined $service->{'problem_has_been_acknowledged'} and $service->{'problem_has_been_acknowledged'}==1 ){
        $returncode.="-ack";
        $content= "&#8730;";
        $title.=" (Acknowledged)";
    }elsif ($returncode ne "ok"  and $status->{'HOSTS'}->{$hostname}->{'problem_has_been_acknowledged'} == 1 ){
        $returncode.="-ack";
        $content= "H";
        $title.=" (Acknowledged Host Down)";
    }
    $title=title_filter($title, $service);
    print "<a href='".TARGET_URL."?type=2&host=$hostname&service=$servicename' class='box $returncode' title=\"$title\">$content</a>\n";
}

sub print_footer{
    print "<!--\n";
    #    print Dumper $status;
    print "-->\n";
    print "</body>\n</html>\n";
}

sub print_host_data{
    my ($status)=@_;
    print "<h2>Host Info</h2>\n";
    foreach my $hostname ( keys %{ $status->{'HOSTS'}}) {
        print_host($hostname, $status->{'HOSTS'}->{$hostname} );
    }
}

sub print_service_data{
    my ($status)=@_;
    print "<br clear='all'/><h2>Service Info</h2>\n";
    foreach my $servicekey ( sort keys %{ $status->{'SERVICES'}}) {
        print_service($servicekey, $status->{'SERVICES'}->{$servicekey}, $status);
    }
}


print_header($boxsize);
print_host_data($status);
print_service_data($status);
print_footer();
